/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, type Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vendor, VendorInterface } from "../../contracts/Vendor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "side",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "kuwaCoin",
    outputs: [
      {
        internalType: "contract KuwaCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200120d3803806200120d833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611001806200020c6000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101495780638da5cb5b14610160578063d0febe4c1461018b578063f2fde38b146101a957610086565b80632fe04d231461008b5780633ccfd60b146100b65780634174f1a5146100e15780636c11bcd31461010c57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101d2565b6040516100ad9190610b7f565b60405180910390f35b3480156100c257600080fd5b506100cb6101f8565b6040516100d89190610b64565b60405180910390f35b3480156100ed57600080fd5b506100f6610329565b6040516101039190610cb2565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e9190610957565b610330565b6040516101409190610cb2565b60405180910390f35b34801561015557600080fd5b5061015e6104f7565b005b34801561016c57600080fd5b5061017561057f565b6040516101829190610ae9565b60405180910390f35b6101936105a8565b6040516101a09190610cb2565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190610905565b610702565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102026107fa565b73ffffffffffffffffffffffffffffffffffffffff1661022061057f565b73ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90610c56565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161029c90610ad4565b60006040518083038185875af1925050503d80600081146102d9576040519150601f19603f3d011682016040523d82523d6000602084013e6102de565b606091505b5050905080610322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031990610b9a565b60405180910390fd5b8091505090565b620186a081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161039193929190610b04565b602060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e3919061092e565b50620186a0826103f39190610ce9565b905060003373ffffffffffffffffffffffffffffffffffffffff168260405161041b90610ad4565b60006040518083038185875af1925050503d8060008114610458576040519150601f19603f3d011682016040523d82523d6000602084013e61045d565b606091505b50509050806104a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049890610bda565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f80019a43b33c25f5bdea92b56a44a18de5974c67687e0982d487dd10e427075983856040516104e9929190610c76565b60405180910390a250919050565b6104ff6107fa565b73ffffffffffffffffffffffffffffffffffffffff1661051d61057f565b73ffffffffffffffffffffffffffffffffffffffff1614610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90610c56565b60405180910390fd5b61057d6000610802565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000620186a0346105b99190610d1a565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161061a929190610b3b565b602060405180830381600087803b15801561063457600080fd5b505af1158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061092e565b9050806106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a590610bfa565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f80019a43b33c25f5bdea92b56a44a18de5974c67687e0982d487dd10e427075934846040516106f6929190610c1a565b60405180910390a25090565b61070a6107fa565b73ffffffffffffffffffffffffffffffffffffffff1661072861057f565b73ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590610c56565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590610bba565b60405180910390fd5b6107f781610802565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506108d581610f86565b92915050565b6000815190506108ea81610f9d565b92915050565b6000813590506108ff81610fb4565b92915050565b60006020828403121561091757600080fd5b6000610925848285016108c6565b91505092915050565b60006020828403121561094057600080fd5b600061094e848285016108db565b91505092915050565b60006020828403121561096957600080fd5b6000610977848285016108f0565b91505092915050565b61098981610d74565b82525050565b61099881610d86565b82525050565b6109a781610dbc565b82525050565b60006109ba601283610cd8565b91506109c582610e3e565b602082019050919050565b60006109dd602683610cd8565b91506109e882610e67565b604082019050919050565b6000610a00600e83610cd8565b9150610a0b82610eb6565b602082019050919050565b6000610a23600d83610cd8565b9150610a2e82610edf565b602082019050919050565b6000610a46600383610cd8565b9150610a5182610f08565b602082019050919050565b6000610a69602083610cd8565b9150610a7482610f31565b602082019050919050565b6000610a8c600083610ccd565b9150610a9782610f5a565b600082019050919050565b6000610aaf600483610cd8565b9150610aba82610f5d565b602082019050919050565b610ace81610db2565b82525050565b6000610adf82610a7f565b9150819050919050565b6000602082019050610afe6000830184610980565b92915050565b6000606082019050610b196000830186610980565b610b266020830185610980565b610b336040830184610ac5565b949350505050565b6000604082019050610b506000830185610980565b610b5d6020830184610ac5565b9392505050565b6000602082019050610b79600083018461098f565b92915050565b6000602082019050610b94600083018461099e565b92915050565b60006020820190508181036000830152610bb3816109ad565b9050919050565b60006020820190508181036000830152610bd3816109d0565b9050919050565b60006020820190508181036000830152610bf3816109f3565b9050919050565b60006020820190508181036000830152610c1381610a16565b9050919050565b60006060820190508181036000830152610c3381610a39565b9050610c426020830185610ac5565b610c4f6040830184610ac5565b9392505050565b60006020820190508181036000830152610c6f81610a5c565b9050919050565b60006060820190508181036000830152610c8f81610aa2565b9050610c9e6020830185610ac5565b610cab6040830184610ac5565b9392505050565b6000602082019050610cc76000830184610ac5565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cf482610db2565b9150610cff83610db2565b925082610d0f57610d0e610e0f565b5b828204905092915050565b6000610d2582610db2565b9150610d3083610db2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d6957610d68610de0565b5b828202905092915050565b6000610d7f82610d92565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dc782610dce565b9050919050565b6000610dd982610d92565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4661696c656420746f2077697468647261770000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656c6c000000000000000000000000000000000000600082015250565b7f4661696c656420746f2062757900000000000000000000000000000000000000600082015250565b7f6275790000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b7f73656c6c00000000000000000000000000000000000000000000000000000000600082015250565b610f8f81610d74565b8114610f9a57600080fd5b50565b610fa681610d86565b8114610fb157600080fd5b50565b610fbd81610db2565b8114610fc857600080fd5b5056fea26469706673582212202b40e9b632b3125ff44800adb1387773206a2e8bacbf8c49657b46f0f71908fc64736f6c63430008040033";

type VendorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VendorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vendor__factory extends ContractFactory {
  constructor(...args: VendorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vendor> {
    return super.deploy(tokenAddress, overrides || {}) as Promise<Vendor>;
  }
  override getDeployTransaction(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override attach(address: string): Vendor {
    return super.attach(address) as Vendor;
  }
  override connect(signer: Signer): Vendor__factory {
    return super.connect(signer) as Vendor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VendorInterface {
    return new utils.Interface(_abi) as VendorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vendor {
    return new Contract(address, _abi, signerOrProvider) as Vendor;
  }
}
